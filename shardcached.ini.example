[shardcached]
stats_interval = 0                             ; The interval in seconds at which output stats to stdout and/or syslog
                                               ; if '0' no stats will be reported on stdout/systlog
                                               ; (optional, defaults to '0')

storage_type = fs                              ; The storage type (optional, defaults to 'mem')

storage_options = storage_path=/home/xant/shardcache_storage,tmp_path=/tmp
                                               ; storage options (possibly optional, depend on the storage implementation)


plugins_dir = ./                               ; The directory where to find plugins (optional, defaults to './')
loglevel = 2                                   ; The loglevel (optional, defaults to '0' == upto(LOG_ERR))
daemon = no                                    ; Run as daemon or in foreground (optional, defaults to 'yes')
nohttp = no                                    ; Disable the HTTP subsystem (optional, defaults to 'no')
me = peer1                                     ; Identifies this peer among the shardcache nodes
                                               ; which are defined in the [nodes] section
;user = username                               ; Assume the identity of 'username' (only when run as root)
pidfile = /var/run/shardcached.pid             ; File where to store the pid of the running instance (optional)

; the nodes taking part in the shardcache (required)
[nodes]
peer1 = my_address:4444
peer2 = some_peer:4445
peer3 = some_other_peer:4446

[shardcache]
num_workers = 50                               ; Number of shardcache workers (optional, defaults to '10')
evict_on_delete = yes                          ; Evict on delete (optional, defaults to 'yes')
use_persistent_connections = yes               ; Use persistent connections instead of creating a new connection
force_caching = no                             ; Always cache remote items instead of applying a 10% chance (optional, defaults to 'no')
                                               ; for each command sent to peers
tcp_timeout = 0                                ; Set the tcp timeout for all the outgoing connections
                                               ; (optional, a 0 value will make libshardcache use the compile-time default)
                                               ; (if set to 0 or omitted the libshardcache default timeout will be used)
lazy_expiration = no                           ; Enable lazy expiration (optional, defaults to 'no')
expire_time = 0                                ; Sets the global expiration time for cached items (optional, defaults to 0, items will never expire
                                               ; and will be removed from the cache only if explicitly/naturally evicted)
iomux_run_timeout_low = 0                      ; Sets the low timeout (in microsecs) which will be passed to iomux_run() calls
                                               ; by both the serving workers and the async reader
                                               ; (optional, a 0 value will make libshardcache use the compile-time default)
iomux_run_timeout_high = 0                     ; Sets the high timeout (in microsecs) which will be passed to iomux_run() calls
                                               ; by both the listener and the expirer
                                               ; (optional, a 0 value will make libshardcache use the compile-time default)
secret = default                               ; Shared secret used for message signing (optional, defaults to 'default') 

[http]
listen = *:4321                                ; HTTP address:port where to listen for incoming connections (optional)
num_workers = 50                               ; Number of http worker threads (optional, defaults to '10')
access_log = ./shardcached_access.log          ; Path to the acces_log file (optional)
basepath = shardcache                          ; Base http path (optional) 
baseadminpath = admin                          ; Base http path for administrative pages (optional, will be the same as basepath if not defined) 
acl_default = allow                            ; Default behavior for paths not matching any of those defined 
                                               ; in the acl section. Possible values are : 'allow' , 'deny'
                                               ; (optional, defaults to 'allow')

[acl]
__(stats|index)__  = deny:*:*
.*                 = deny:PUT:*
.*                 = deny:DELETE:*
.*                 = allow:*:82.173.134.166/32
.*                 = allow:*:127.0.0.1/32


[mime-types]
pdf      = application/pdf
ps       = application/postscript
xml      = application/xml
;js       = application/javascript
json     = application/json
gif      = image/gif
jpeg     = image/jpeg
jpg      = image/jpeg
png      = image/png
tiff     = image/tiff
html     = text/html
txt      = text/plain
csv      = text/csv
css      = text/css
mpg      = video/mpeg
mp4      = video/mp4

